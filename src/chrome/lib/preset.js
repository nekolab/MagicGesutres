/**
 * @fileoverview This is preset profiles and actions file.
 * @author sunny@magicgestures.org {Sunny}
 * @version 0.0.2.0
 */

/* global chrome: false, MagicGestures: true */
/* jshint strict: true, globalstrict: true */

"use strict";

/**
 * Definition of MagicGestures.Preset.
 */
Object.defineProperty(MagicGestures, "Preset", {
    value: Object.create(null),
    enumerable: true
});

/**
 * Preset profiles includes MagicGestures, FireGestures, SmoothGestures and Opera.
 * Actions includes many default actions.
 */
Object.defineProperties(MagicGestures.Preset, {
    Profiles: {
        value: Object.create(null),
        enumerable: true
    },
    Actions: {
        value: Object.create(null),
        enumerable: true
    }
});

MagicGestures.Preset.Profiles.MagicGestures = function() {
    return new MagicGestures.Profile({
        id: "b8980ce9f43e35f2",
        name: "MagicGestures",
        description: "MagicGestures style profile.",
        enable: true,
        sync: false,
        readOnly: true,
        locusColor: [255, 0, 0, 1],
        gestures: [
            new MagicGestures.Gesture({
                code: "L",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_back"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "R",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_forward"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DR",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "LU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "undo_close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UDU",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab_bypass_cache"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "URD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "close_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UL",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "prev_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UR",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "next_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RUD",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "minimize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RDU",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "maximize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "DU",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "goto_parent_dir"
                    }),
                    new MagicGestures.Action({
                        dependency: "link",
                        name: "open_in_newtab_background"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDR",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "view_current_frame_only"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDRU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "view_current_frame_in_new_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "U",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        dependency: "link",
                        name: "open_in_newtab"
                    }),
                    new MagicGestures.Action({
                        dependency: "wheel",
                        name: "scroll_to_top"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "D",
                actions: [
                    new MagicGestures.Action({
                        dependency: "wheel",
                        name: "scroll_to_bottom"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "RDLUR",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "open_options"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "RDLD",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "open_status"
                    })
                ]
            })
        ],
        neuralNetInfo: '{"inputCount":64,"hiddenCount":11,"outputCount":17,"actionsList":[[{"dependency":"","name":"history_back"}],[{"dependency":"","name":"history_forward"}],[{"dependency":"","name":"close_tab"}],[{"dependency":"","name":"reload_tab"}],[{"dependency":"","name":"undo_close_tab"}],[{"dependency":"","name":"reload_tab_bypass_cache"}],[{"dependency":"","name":"close_window"}],[{"dependency":"","name":"prev_tab"}],[{"dependency":"","name":"next_tab"}],[{"dependency":"","name":"minimize_window"}],[{"dependency":"","name":"maximize_window"}],[{"dependency":"","name":"goto_parent_dir"},{"dependency":"link","name":"open_in_newtab_background"}],[{"dependency":"","name":"view_current_frame_only"}],[{"dependency":"","name":"view_current_frame_in_new_tab"}],[{"dependency":"link","name":"open_in_newtab"},{"dependency":"wheel","name":"scroll_to_top"}],[{"dependency":"","name":"open_options"}],[{"dependency":"","name":"open_status"}]],"hiddenWeights":[-1.033637923272936,0.314162371188993,-0.766234653155003,0.39579295550718413,-0.9840792381117687,-0.07076330532074841,-0.3629285018804074,0.16053144631221478,0.22222963758683384,0.562128688648936,-1.5284803864459182,0.09820211862458943,-0.8193785632873516,-0.5290809539401572,-0.8739689631242833,-0.7643572707041896,-0.02342517397590769,-0.5182290679778119,0.006572891927874777,-0.2897266672927037,-0.8766958704520172,-0.22353449622197827,0.3094592877722872,-1.260941106976563,-0.31139661687765774,-0.22923591468632365,0.10769279823877285,0.19821507329550503,-1.0911635373602144,-0.36975305029693806,0.19316751939483232,-0.4820991392763313,-0.19433427612287013,0.17445535915153854,-0.12561703390431755,0.11947293350654446,-0.4299730273055768,0.6836142521742331,-0.5932768225819645,-0.7033399068301849,-0.23169492940986425,-0.13475114335477692,-0.14514237665445145,-0.31267732029750267,-0.206056337569512,0.6330839123393704,1.2793192199909724,-0.716524912248988,0.6871232969679991,-0.428136534776269,-0.4484396854479715,-0.8979971653576255,-0.02203978719831691,-0.9628995161297977,-0.019799717987787575,-0.2727008608895542,-0.25870037526534134,0.6535121320952415,0.28254008171438066,-1.2062111797536776,-0.06001465097711647,-1.3202305350246897,0.4726460824656387,-0.16896532641530201,-1.5432012672810353,0.46130802359421014,1.3104302351549901,1.0108551794475693,-0.16661500426003703,-0.42715957744058536,0.5040681375377432,0.5954789632743979,1.4656629193761084,-0.19784856757160357,1.1240527400933897,1.2725605235247612,1.6104827648215603,0.586939071006963,1.6328035587631773,0.6081348379745573,0.31429379567056115,1.4535864875598312,-0.039395670493931716,0.18819495802210567,-0.3356238450797845,0.749115174630895,-0.85340928621018,0.7194519844183053,-1.361836537500765,1.0832199375422014,-0.30379606156227684,0.8447980992631899,-0.09878067419028679,1.1358085950041108,-0.47256079109481736,1.1478789458187237,-0.30592629525906506,-0.26819882441019355,-0.971097430730448,0.11126373529727307,-1.0794441383836915,0.56770524995694,-0.3729218147268768,0.22510333275262717,0.0031839492084840488,0.4213690218499674,0.18097147013120582,-0.6622827267188286,-0.7052480055480277,0.561089668897197,-0.0007772183506576443,0.1994737149302257,0.07037224867429337,0.12534386401969624,0.5483280413979437,-0.3538298791322377,0.20163208137838298,0.5544392580118507,-1.0246181261389284,-0.03472500229733651,-1.3130852479151076,0.3572258154813684,-0.9663994867949607,-0.6555527726236257,-1.5241073608993179,0.05026946374667257,-0.4035118759273143,-0.9292268285575778,-0.3517768049276041,0.3541726896718486,0.6232666677929256,-1.0805319033915155,-0.02945341149868073,-0.9554298844540752,-0.4135129361279475,-0.9169069918224848,-0.7692072762042489,-0.29018831098248815,-0.4574678244866602,0.2558712527734994,-0.3801844495214688,-1.0702264926748315,-0.3819780641101467,-0.3411864250319236,-0.554367896609994,0.0442355306349793,-0.27882243751381697,-0.8855353541074287,0.7521874926721442,-1.475862135026373,-0.09756448364650368,-0.7831487481815712,-0.00023802185722242452,-0.7848071751457845,1.288618784376306,0.24137403515230607,1.2917746727256547,-0.7789061748578746,0.4799764615385306,-1.1007216730311071,1.3009213533154205,0.09043869337369236,-0.7753730143205579,0.11207882292883929,-0.7571787896351274,0.3193261239336654,0.23346253654272583,0.17924372271018765,0.7245931318127574,0.5883224439583307,0.13828418917067592,1.123895410984717,0.7253628960095803,-0.6294791854994793,-0.2872738451480527,-0.8672940161155959,-0.3181733311868859,0.16926115489728033,0.9351174046084368,-0.1312011649395176,0.18200048419258386,-0.599057163079872,0.7673374040665537,1.0042683161183679,0.06801244836843512,0.3965055868349463,0.31896914016998523,0.3217538991331549,0.7097100590968937,0.42212465548361244,0.9219720348397707,0.8899023779987849,0.6051719271259814,0.07950104450280894,0.6924586668097035,0.3166081304130934,0.34009392577807407,1.0473473723446818,1.1807824915240395,0.7724108434682562,-0.4330017942038694,0.2851475034309408,1.1561416231061221,0.538200634944238,-0.3859991708805125,0.9972795829577237,0.4360784750397042,1.0391679615182634,-0.24206054145817438,-0.776023243846481,1.0277402037320431,0.5678867402902509,-0.16630634661679827,0.6564367128020842,-0.04441595818763084,-0.07391840466794466,-0.19295943291773704,-1.0609940785646723,-0.23099908432605779,0.7421749176725448,-0.9367449312904763,-1.2530983466918963,-1.028153398450172,-0.42079072718353605,-0.23380109891639833,-0.6189656992706843,-1.376489405896251,-1.2607235735023552,1.3302743801289187,-0.7380561054425524,-0.050668171755886435,-0.7086085107850125,1.6943262408860913,-0.06745819245941076,0.014792391641982023,-0.11698214487648437,0.5782812638981063,1.0801259717262246,1.0551638206673197,1.1057961862823835,0.22932401851018772,0.608396185125295,-0.5432275376076476,-0.9817153095525869,0.4159188734026156,-0.6029182773741082,0.7039569094967648,-0.9617843338014678,-0.6891043111491397,-0.5642727486515546,0.841494708806704,-0.19044897227604707,-0.10501247363123119,0.47021763550992113,0.1462215595137774,-0.23202745790649965,0.1849693190496866,-0.7728829564252988,-0.9945156243439213,0.09476941858172012,-1.5291990997906542,0.7482133537131777,-0.3771219297017807,0.5363224941838016,0.19606631466337363,0.7740892452720036,-1.0108280197422839,-1.0110164450880563,-0.9498163034845194,-0.7709908288371334,-1.0336254426915004,-0.004671151137772055,0.03450666538589266,0.4362978661965068,-0.09146488835913627,-0.2834710464370921,-0.5380455285912584,0.15906595535447168,-1.254134275731262,-0.3595331296896525,-1.5612217548904945,-0.11296546828131317,0.07536193206686395,1.089630774815732,-0.03153612194802645,-0.0008860657576298157,-1.4775445903583164,-1.0653942490491235,-0.9333020043491056,-0.7099495737376452,-1.3011201284757559,0.6190411157411694,-0.4362723269614497,0.3235012113229539,0.7241649887409912,0.7511825931371275,0.48030399567232385,0.7076571981535379,1.0821747354026592,-0.5034662444872617,1.0162730326670903,-0.6817952517216919,0.3343762386734067,0.8544626192166763,-0.05563186023809368,0.3704665906704257,0.10065515517763524,0.5070679549104719,-0.10736230842642311,-0.6160101508689588,0.9594130469594796,0.02213323199539732,0.8556936471831699,1.192380646144743,0.9433342102092405,0.5252263815083918,0.23127307045428377,1.3029793639609135,-0.31548567906797575,0.14590789647191138,0.3193282438550835,0.010841966973388514,0.34758255864649434,0.35494149047299495,-0.2862432924885329,-0.9433484025056172,-0.3428580481788603,0.4773969134559139,-1.0258831256298646,-0.3973886960874102,-0.18777893346235863,0.037618687028187436,-1.243735152785321,0.9906933378671621,-0.2003180016993064,-0.7685730432848145,-0.6266337852223256,0.960144795129199,-0.23362604298130507,0.8301527018039319,-1.318258094258586,-0.6554416526287684,-0.6910992001221083,-0.41187903715221946,-0.00009250566740927246,0.4730199322857069,-0.2545656060837717,0.2198187814129876,-0.3835319210742231,-0.6768063317948585,-0.7776758596268193,1.053968766621488,-0.6265766964192626,0.8359432210318657,-0.41988225410609026,-0.27694263643474326,-0.10107822985305243,1.3640701084499425,0.9123944622435718,1.454149228810256,-0.6546337850420616,1.3849416680735696,0.1634637630515812,0.2267780422266286,-0.7238051284064836,0.682945900786266,0.7464286747428294,0.04931607207259199,-1.0136260891773157,-0.029873857572916794,-0.5204518743299262,0.09258141804462257,-0.5426986374400844,-0.6922656702507174,-1.3943070615591333,-0.9571666545932547,0.23902027765110634,0.44614652118184495,-0.43328600060373185,-0.14149058291217903,-0.6849278575758649,-0.6683057039742724,-1.427441606393021,-0.38384214236862035,0.19977874811559693,0.028726472915201987,-0.5071722200158187,-0.3229734083404314,-1.0364484550449244,0.9934499477642119,0.45467262234399475,0.945554342139742,-0.7845791388875734,0.10896719109288536,0.07335265384847679,1.025632261783112,0.3766506778434887,-0.25825264675521403,0.22229251203919237,0.8016874082575055,0.3993294428461269,0.011557888258466481,0.39197015188495077,-0.6018595648740915,-0.34036286975363167,-0.07318475847144001,0.9265130360488276,1.2105453992440918,0.7474014505621474,0.6409650305464459,0.7607049111154358,-0.3834593118921296,0.01029830440786236,1.1992268641273613,-0.2561572774695164,0.247581092154538,0.529733066195019,-0.36759836501602816,0.2498751177725943,1.2769548325317752,1.248978218277349,0.5636864249112856,0.4093289164684206,-1.0528891915832406,1.0398308475359759,-0.2685104525093694,-0.12309405311500228,0.22673993181393334,-0.3713010621123111,-0.11327507530350045,1.3634899121843111,-0.7211156016868632,0.6438807017720884,-0.7354557079645149,0.3021926113024134,-0.2252183038192245,1.5189010344065625,0.7733661515256115,1.3093924119893416,-0.27293764866798553,1.105827277722618,0.7899685047665778,0.2398908652466068,-0.17050753374526725,-0.2901221684079353,0.8940302056359294,1.4293484773587786,0.7354564747871998,0.3712842112507941,1.0453260803694293,0.431078237677765,-0.43642485541234344,0.4211015633408251,0.7996220329875293,-0.5118638013150061,0.6878569415918847,0.3021019550160016,-0.5360247058645526,0.3420874571547355,-0.35878223449370406,1.1710970813528154,0.19052979081489949,1.0609261716835665,1.2355063800848567,-0.5547405837915523,0.5420754934809479,0.12362655551437732,0.29954033821442627,0.6864681562528333,0.9111845852902125,0.537610040715491,-0.5620063523784337,0.43186218696600215,0.2336309441342864,-1.0126040793494524,-0.12568613877744253,-1.1594357687518984,0.5037548172866062,-0.7639535229261185,-0.8402015926669284,-0.15564202531976876,0.3594427247125463,-0.1282367977906414,-1.232038173492659,-1.4435400228608744,-0.29185838405380093,-1.79981681952592,0.04591987904074812,-1.105719277323241,-0.11848955584776406,-1.1038174202339899,0.4098257298386405,-1.106237537846919,0.5203172608137228,-1.183480512044174,0.44150110211671756,0.3958027039927082,0.9022661982379434,-0.3661537959195519,0.592727663861172,-0.8595203028015526,-0.4263806101590755,-1.0845012107818932,-0.10553652332894857,-0.2678166927607498,-0.6403850629479739,-0.1397769415535417,-0.20609708274910507,-0.7820624519855075,1.1037407507634902,-0.16404066484127292,0.9502518227769878,-0.4020230306096762,0.37066561910128054,0.6864312657370872,-0.7278864756711869,0.787833120509208,0.029123532071614992,-0.17491783730391505,-0.5783715312974667,-0.43147824606366453,-0.28147125394137423,-0.3503837477832287,-0.5313509508134546,-0.3471975894130021,-0.04801877365501041,-0.3219329001798484,-0.7385921605029778,0.6752007338733047,-0.35004522522034165,0.9237677711576814,0.35648670037223085,-0.34723509517006573,-0.91574554295332,-0.5901417356941432,-0.37165945056133265,0.5427598735529536,0.9859337679364875,-0.5015781520653773,0.05088965113024713,-1.1184468449812701,0.05709175423468933,0.9107417274377848,0.4188585417098421,1.2168393685593828,1.6220627092509707,-0.4350917517636512,0.9198960622916751,-0.6765596313830986,0.6470564285437442,-0.1143631005157328,1.5570052711437414,-1.0109143501510625,-0.5142591403802249,0.562627972346755,0.5589117459947858,-0.7594328697202483,0.4442845053034444,0.4605130930608564,-0.8376008771905227,-0.11920894447803347,-0.23922391250594624,-0.10591188329550902,-0.8619566813818499,-1.109209586636165,-0.31906042739370255,-0.836282219507718,0.8757555389069632,-0.2665600986951093,-0.09251485308767099,-0.5457125546601502,-0.16414465554378246,-1.1155315347206707,-0.6136831057662451,0.5749038282591007,0.4826306394828245,-0.017637924124013323,-0.4995043686064274,-0.9589098806683817,-0.8591740586268091,-1.0995752041418962,0.8422958563608742,-0.6063038104404611,0.5765326182884786,-0.6917338072418842,0.5566498558557892,0.18162124375167107,-0.12575563503808476,-1.1469454681099907,-0.9511911086217201,-0.7724780067400391,-0.8440232974887526,-0.20935871867177444,-0.5410599982776346,0.27408349285188405,-0.7592735182904341,-1.3298531365180013,0.33180779130750887,-0.19868706162733304,0.4039944617217449,-1.0281219334490697,0.6816469861007436,-0.39020205425901944,-0.6822834218107945,0.6962026022666759,-0.8042819651962125,-0.4763825814878807,0.15128984807741924,0.5702109668886196,-0.021003877811755223,0.8622936770802253,-0.8247099843934191,0.7484485998850856,0.38465658071115616,1.180463353927107,-1.2172328018709941,-0.1847245252590018,0.7130590048919268,-0.2978576158704758,0.4139561597558485,0.1555630911541572,-0.13982969007241836,0.6490938563299762,-0.013711508947223226,-0.47370312418600835,1.0631084021862973,-0.18699046466312172,0.5427071090711196,-0.3632058404758826,0.5844134136026622,-0.06563693856822551,0.2188035712500959,-0.6021777988784188,0.08976182968065625,0.05375634915667578,0.7045785133427145,1.1566516391336947,0.24702357600239438,0.6516184762455555,-0.3923984034286687,0.11842723911255638,0.7662686384914549,0.18015519784391237,1.2106098454146015,0.10560722298547691,1.0011822507416936,0.9486468566916917,1.4029890178403261,1.1733544322066038,-1.7142908607612282,-0.19328237076899613,-1.120811268275654,0.015133556596427327,-0.49542488908213483,-0.05232629490694479,0.7198688489775739,-0.8665996653368236,-0.09731324814078465,0.21612097431295954,0.4577428926173194,-0.985531436127192,0.6764721543918929,-0.10183841487070992,0.5420494195464632,-0.09195089789881704,-1.3975712955615187,-1.0238645198388405,-0.49527345402460676,-1.1036000238365014,0.5538021904386946,0.5716701610380337,-1.0829571070178956,0.96958438286293,0.39414407543571106,0.8720617613542511,-0.8235803381752898,-0.21219494772571973,-0.0051478878731205085,0.047016541739369186,-1.173562256632992,-0.5383637167649378,-0.29762599665171735,-0.6741429530236959,0.0031749568829496037,0.1125591490264944,-0.6605347232011816,0.6096136844564141,-1.879760590852632,-0.5944980699798419,-0.7451994740377572,-1.0260670571817458,-0.1812433106798189,-0.7621809576826626,-0.13018706255117915,-1.1935041502306873,-0.1874494720296048,-1.460887267459429,0.24505297606354073,-0.2681277706175289,-0.27461911437341663,-0.4263337450066122,0.8323229702368253,-0.48064243001504864,0.584278462193146,-1.056339319791797,1.0488241903662576,-0.7034933753275832,0.7011069843724251,-0.44305853312476595,-0.4303368192918679,-1.1590935746172177,1.1661039890900136,0.3080014572514672,-0.5906591581002003,-1.1257429737631848],"outputWeights":[0.9432051634669163,-0.9850189491711299,-2.480288639776404,0.454673281981851,2.7060383044583327,-3.32949585568223,-1.9352139368318229,-2.1652590304183312,0.34313982295679973,-3.858431013040508,1.4390146914001765,1.2378418739842125,-4.045213559965588,1.6716988735267353,3.2973597454807564,-1.860083860812572,-3.3712329091093807,1.1909978460018802,0.6286663456713321,-0.015435013408489726,-3.333014458909567,0.3712878117272266,-3.222261761794453,2.758768656007483,-2.0532317510278144,2.0064165110293835,-2.5998385332659524,-3.647794512132321,3.282908667352139,-3.0631869939072303,-0.237964713457971,0.48046187984497,-3.514751573646699,0.3763006273683854,-1.9926298367677413,1.1881463898013587,-1.8792088187402796,-1.2614208862651037,1.7220945503855454,2.4586512817742894,1.7197657934762616,-0.08893063096885838,-3.3605130813386417,-2.0805154840342075,-4.6503821622177,0.9653268040030033,0.5073227473520016,2.200188403275778,-0.5307881973400034,-3.1209553596927937,-4.5409448285605825,-3.7750212861441477,1.0458349059481018,1.929458322861346,-3.5062009011854958,3.338457730947833,-0.525447271671661,0.329986480402387,1.3013942482829597,2.8662457508298913,-0.38814236228089927,-1.4751207274401241,1.9014333099937868,-3.264177029372064,-2.8420755147947854,1.7348677917766706,-3.9121134341302106,-2.912093637211511,1.251923370736606,0.6141354044853565,-3.5194231607448954,0.9514396087017278,-4.938699484928754,-1.9710664598979872,1.985702824512223,-5.05780971647115,1.6155053629965166,1.6578466813449835,0.6387492820569096,-2.086158208061404,0.16072146831678047,-1.799528640069503,2.1224796729334225,2.310011555756692,-0.26600283754299064,-2.887876795258346,1.8666985862404704,3.387334826594637,-4.169037478602285,1.1865245819224877,-3.071026172396362,-0.33154698011966627,0.25258211403694114,-4.543835733733994,0.6736260767467598,2.9750639636413565,1.5463617394111402,-4.756646665902133,0.3950924660711,-1.7214848321733995,1.6380469024931061,2.3416633420901602,0.7739777033326103,2.205957296508374,-5.557146876682681,-2.6386903596787903,-2.660259573324058,2.171385966627466,-2.2489173772387847,1.8371673591670479,-1.4618636519924502,3.062652411340665,-2.392081907813251,-2.847106820458737,-1.041619780873187,1.6306823918219082,-3.5174911585443893,-1.5185455761211457,1.8781195654001448,2.3839673903680794,-2.1615172362784105,1.6921405147124593,-2.9674747263319383,1.751316140302298,-1.9880303042629184,3.1177647949870173,-0.2823160722571617,-2.7029488578261573,0.17222585611287552,-2.841079071420688,-2.66815158242638,1.2377586964833305,2.0096364844104944,0.9488667806102906,-1.7593217036922792,-3.1378893969346433,-2.792149793025527,-2.811141957250311,1.0629689854434943,1.1484084974810942,1.5549210387169103,-3.451922273954663,-1.414346017361206,1.8822339402223975,1.5553913729560747,-2.4490283005420665,2.6786657752191396,-1.906371681354456,1.0032252062361695,-5.4224576552075625,1.6572259782523167,-3.7782749281655823,-1.3070865463706118,-0.10783856570914666,-2.4313721449450405,1.929597980242493,1.4326037005342225,-2.6000486603465727,-5.881638209430019,-2.5114462224642797,1.4898289715510875,2.480565550102353,1.5270905557192427,-3.5422241099560208,0.012436264395128082,0.02294118010638474,-3.5215068021495073,2.834409400497723,0.4590156627406726,1.8715150139375976,1.3807624962012939,-4.188775530971822,-2.5989086167986053,0.019233442558216338,-4.373605387597044,2.1220624271492063,-2.797997911505264,-2.133555558080205,2.20364866641032,2.4334849138726677,-2.4828469896739858,-4.1640447723389755,-1.646648532054123,3.2056668463615763,0.9741909024025679,-1.948613055693894,-0.5963851757789169,2.3373170064160727,0.5014051150390801,-0.20078054083751126,-4.340672841501387,1.94382909447856,-3.233751566195133,-2.5157593862117573,-2.425697202286343,-0.8590689480854763,-3.7113370020821037,-2.9255104577849886,0.8964902383008,-3.14345744322966,1.8969201957740005,0.9338712308913862,1.8351440503289387,0.905976886585303]}'
    });
};

MagicGestures.Preset.Profiles.Opera = function() {
    return new MagicGestures.Profile({
        id: "af72c225f1d7ee4d",
        name: "Opera",
        description: "Opera style profile.",
        enable: true,
        sync: false,
        readOnly: true,
        locusColor: [255, 255, 255, 1],
        gestures: [
            new MagicGestures.Gesture({
                code: "L",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_back"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "R",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_forward"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "UL",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "goto_parent_dir"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "U",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "stop_loading"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "D",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "new_tab"
                    }),
                    new MagicGestures.Action({
                        name: "open_in_newtab",
                        dependency: "link"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DU",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "duplicate_tab"
                    }),
                    new MagicGestures.Action({
                        name: "open_in_newtab_background",
                        dependency: "link"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UR",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "maximize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DL",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "minimize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DR",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RLR",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "close_tab"
                    })
                ]
            })
        ]
    });
};

MagicGestures.Preset.Profiles.FireGestures = function() {
    return new MagicGestures.Profile({
        id: "c69b0a6f7786ef4e",
        name: "FireGestures",
        description: "FireGestures style profile.",
        enable: true,
        sync: false,
        readOnly: true,
        locusColor: [0, 255, 0, 1],
        gestures: [
            new MagicGestures.Gesture({
                code: "L",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_back"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "R",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_forward"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UDU",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab_bypass_cache"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "DU",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "goto_parent_dir"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DRU",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "new_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "URD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "close_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RUD",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "minimize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RDU",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "maximize_window"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "LR",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    , 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "new_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DR",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "RL",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "undo_close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UL",
                featureVectors:[0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "prev_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UR",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "next_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LRU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "zoom_in_text"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LRD",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "zoom_out_text"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LRUD",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "reset_text_zoom"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "LU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "scroll_to_top"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "LD",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "scroll_to_bottom"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDR",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "view_current_frame_only"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDRU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "view_current_frame_in_new_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "D",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "open_in_newtab_background",
                        dependency: "link"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "U",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "open_in_newtab",
                        dependency: "link"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDRUL",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "open_options"
                    })
                ]
            })
        ]
    });
};

MagicGestures.Preset.Profiles.SmoothGestures = function() {
    return new MagicGestures.Profile({
        id: "a18e20513ba94779",
        name: "SmoothGestures",
        description: "SmoothGestures style profile.",
        enable: true,
        sync: false,
        readOnly: true,
        locusColor: [255, 0, 0, 1],
        gestures: [
            new MagicGestures.Gesture({
                code: "U",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "new_tab"
                    }),
                    new MagicGestures.Action({
                        name: "open_in_newtab",
                        dependency: "link"
                    }),
                    new MagicGestures.Action({
                        name: "scroll_to_top",
                        dependency: "wheel"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "D",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "toggle_pin_tab"
                    }),
                    new MagicGestures.Action({
                        name: "scroll_to_bottom",
                        dependency: "wheel"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "L",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_back"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "R",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "history_forward"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UL",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "prev_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UR",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "next_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DR",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "LU",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "undo_close_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "DU",
                featureVectors: [0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "duplicate_tab"
                    }),
                    new MagicGestures.Action({
                        name: "open_in_newtab_background",
                        dependency: "link"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UDU",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1],
                actions: [
                    new MagicGestures.Action({
                        name: "reload_tab_bypass_cache"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "URD",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "view_source"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                code: "UDR",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "split_tabs"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "UDL",
                featureVectors: [0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, -1, 0, -1, 0, -1, 0, -1, 0, -1,
                    0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "merge_tabs"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "LDR",
                featureVectors: [-1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "list_cookies"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "RDLUR",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 1, 0,
                    1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                actions: [
                    new MagicGestures.Action({
                        name: "open_options"
                    })
                ]
            }),
            new MagicGestures.Gesture({
                // ToDo: Not Supported Yet
                code: "RDLD",
                featureVectors: [1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, -1, 0, 0, 1, 0, 1, 0, 1,
                    0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                actions: [
                    new MagicGestures.Action({
                        name: "open_status"
                    })
                ]
            })
        ]
    });
};

Object.defineProperties(MagicGestures.Preset.Actions, {

    close_tab: {
        value: function(tab) {
            chrome.tabs.remove(tab.id);
        },
        enumerable: true
    },

    close_other_tabs: {
        value: function(tab) {
            chrome.tabs.query({windowId: tab.windowId}, function(tabs) {
                for (var i = tabs.length - 1; i >= 0; i--) {
                    if (!tabs[i].pinned && tabs[i].id !== tab.id) {
                        chrome.tabs.remove(tabs[i].id);
                    }
                }
            });
        },
        enumerable: true
    },

    close_tabs_to_the_left: {
        value: function(tab) {
            chrome.tabs.query({windowId: tab.windowId}, function(tabs) {
                for (var i = tabs.length - 1; i >= 0; i--) {
                    if (tabs[i].index < tab.index && !tabs[i].pinned) {
                        chrome.tabs.remove(tabs[i].id);
                    }
                }
            });
        },
        enumerable: true
    },

    close_tabs_to_the_right: {
        value: function(tab) {
            chrome.tabs.query({windowId: tab.windowId}, function(tabs) {
                for (var i = tabs.length - 1; i >= 0; i--) {
                    if (tabs[i].index > tab.index && !tabs[i].pinned) {
                        chrome.tabs.remove(tabs[i].id);
                    }
                }
            });
        },
        enumerable: true
    },

    close_window: {
        value: function(tab) {
            chrome.windows.remove(tab.windowId);
        },
        enumerable: true
    },

    duplicate_tab: {
        value: function(tab) {
            chrome.tabs.duplicate(tab.id);
        },
        enumerable: true
    },

    full_screen: {
        value: function(tab) {
            chrome.windows.update(tab.windowId, {state: "fullscreen"});
        },
        enumerable: true
    },

    history_back: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {code: "history.back();"});
        },
        enumerable: true
    },

    history_forward: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {code: "history.forward();"});
        },
        enumerable: true
    },

    maximize_window: {
        value: function(tab) {
            var toggle = {maximized: "normal", normal: "maximized", fullscreen: "maximized", minimized: "normal"};
            chrome.windows.get(tab.windowId, null, function(window) {
                chrome.windows.update(tab.windowId, {state: toggle[window.state]});
            });
        },
        enumerable: true
    },

    minimize_window: {
        value: function(tab) {
            chrome.windows.update(tab.windowId, {state: "minimized"});
        },
        enumerable: true
    },

    move_to_left: {
        value: function(tab) {
            chrome.tabs.move(tab.id, {index: 0});
        },
        enumerable: true
    },

    move_to_right: {
        value: function(tab) {
            chrome.tabs.move(tab.id, {index: -1});
        },
        enumerable: true
    },

    navigate_to_new_tab: {
        value: function(tab) {
            chrome.tabs.update(tab.id, {url: "chrome://newtab"});
        },
        enumerable: true
    },

    new_tab: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "chrome://newtab"});
        },
        enumerable: true
    },

    new_window: {
        value: function() {
            chrome.windows.create({});
        },
        enumerable: true
    },

    next_tab: {
        value: function(tab) {
            chrome.tabs.query({index: tab.index + 1, windowId: tab.windowId}, function(tabs) {
                if (tabs.length !== 0) {chrome.tabs.update(tabs[0].id, {active: true});}
            });
        },
        enumerable: true
    },

    open_bookmarks: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "chrome://bookmarks/"});
        },
        enumerable: true
    },

    open_downloads: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "chrome://downloads/"});
        },
        enumerable: true
    },

    open_extensions: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "chrome://extensions/"});
        },
        enumerable: true
    },

    open_history: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "chrome://history/"});
        },
        enumerable: true
    },

    open_in_newtab: {
        value: function(tab, data) {
            chrome.tabs.create({index: tab.index + 1, url: data.href, openerTabId: tab.id});
        }
    },

    open_in_newtab_background: {
        value: function(tab, data) {
            chrome.tabs.create({index: tab.index + 1, url: data.href, active: false, openerTabId: tab.id});
        }
    },

    pin_tab: {
        value: function(tab) {
            chrome.tabs.update(tab.id, {pinned: true});
        },
        enumerable: true
    },

    prev_tab: {
        value: function(tab) {
            chrome.tabs.query({index: tab.index - 1, windowId: tab.windowId}, function(tabs) {
                chrome.tabs.update(tabs[0].id, {active: true});
            });
        },
        enumerable: true
    },

    print_tab: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {code: "window.print();"});
        },
        enumerable: true
    },

    reload_all_tabs: {
        value: function(tab) {
            chrome.tabs.query({windowId: tab.windowId}, function(tabs) {
                for (var i = tabs.length - 1; i >= 0; i--) {
                    chrome.tabs.reload(tabs[i].id);
                }
            });
        },
        enumerable: true
    },

    reload_all_tabs_bypass_cache: {
        value: function(tab) {
            chrome.tabs.query({windowId: tab.windowId}, function(tabs) {
                for (var i = tabs.length - 1; i >= 0; i--) {
                    chrome.tabs.reload(tabs[i].id, {bypassCache: true});
                }
            });
        },
        enumerable: true
    },

    reload_tab: {
        value: function(tab) {
            chrome.tabs.reload(tab.id);
        },
        enumerable: true
    },

    reload_tab_bypass_cache: {
        value: function(tab) {
            chrome.tabs.reload(tab.id, {bypassCache: true});
        },
        enumerable: true
    },

    split_tabs: {
        value: function(tab) {
            chrome.windows.get(tab.windowId, {populate: true}, function(window) {
                chrome.windows.create({
                    focused: true, type: window.type,
                    incognito: window.incognito, tabId: tab.id
                }, function(createdWindow) {
                    for (var i = window.tabs.length - 1; i >= 0; i--) {
                        if (window.tabs[i].index > tab.index) {
                            chrome.tabs.move(window.tabs[i].id, {windowId: createdWindow.id, index: window.tabs[i].index - tab.index});
                        }
                    }
                });
            });
        },
        enumerable: true
    },

    stop_loading: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {code: "window.stop();"});
        },
        enumerable: true
    },

    scroll_to_top: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {code: "window.scroll(0, 0);"});
        },
        enumerable: true
    },

    scroll_to_bottom: {
        value: function(tab) {
            chrome.tabs.executeScript(tab.id, {
                code: "window.scrollTo(0, document.documentElement.scrollHeight);"
            });
        },
        enumerable: true
    },

    toggle_pin_tab: {
        value: function(tab) {
            chrome.tabs.update(tab.id, {pinned: !tab.pinned});
        },
        enumerable: true
    },

    undo_close_tab: {
        value: function(tab) {
            // Currently, chrome.sessions is only avaliable in Dev Channel (v32).
            chrome.sessions.getRecentlyClosed(function(sessions) {
                if (sessions[0]) {
                    var item = (sessions[0].tab) || (sessions[0].window);
                    chrome.sessions.restore(item.sessionId);
                }
            });
        },
        enumerable: true
    },

    unpin_tab: {
        value: function(tab) {
            chrome.tabs.update(tab.id, {pinned: false});
        },
        enumerable: true
    },

    view_source: {
        value: function(tab) {
            chrome.tabs.create({index: tab.index + 1, url: "view-source:" + tab.url, openerTabId: tab.id});
        },
        enumerable: true
    }
});